새 프로젝트 - 데스크톱 마법사? - 데스크톱 어플리케이션 (빈 프로젝트)

int wWinMain 사이에 
_stdcall // APIENTRY // WINAPI 
셋다 ㄱㅊ다, 사실 정의로 가보면 셋다 똑같음

wWinMain -> 유니코드 기반
WinMain -> 멀티바이트 기반
앞으로는 유니코드 기반으로 모든것을 작업할예정

LP들어간다 : 무조건 포인터
EX들어간다 : 확장 버전 (익스텐션), EXW는 유니코드로 된 확장버전

어떤 클래스가 되던 무조건 Init Frame Render Release 네개는 무조건 있어야한다, 빈거라도 
// 시스템적 강제는 아니고 선생님이 강제 ㅋㅋ

ZeroMemory -> memset 역활, 제로메모리 내부에서 멤셋이 호출된다

cbSize, style, hInstance 세개는 무조건 있어야한다 // 얘는 시스템적 강제인듯

IpfnWndProc : lp fn Wnd Proc, 윈도우(Wnd) 프로시저(Proc) 함수(fn) 포인터(lp) 
 -> 윈도우 메세지를 받을 함수를 지정한다 (우편주소, 전화번호 이런느낌?적인느낌?)

CreateWindowW : 운영체제에 등록한 윈도우를 생성한다 (진짜 윈도우를 만듬)

ShowWindowW : 만들어둔 윈도우를 화면에 띄운다 쇼윈도에걸린너의셔츠를보며

Iinstance  :  접수번호
HWND : 윈도우를 제어할 수 있는 핸들이다, 등기 or 등기번호라고 생각하면 됨 


RGB는 시프트.. 연산? 나중에 다시 봐야할 때가 올듯 // 0xggbbrr 이런느낌으로 들어감

윈도우 스타일로 장난질 가능한듯ㄷㄷ define된 머시기들 집합체라서 
커먼윈도우를 많이쓰는데 게임에서는 팝업윈도우를 자주쓴다(타이틀이업슴 ,못움직임)

DefWindowProc : 메세지 내가 처리 불가, 니가 대신 '해줘' 라는 뜼ㅎ

윈도우는 메세지 기반 처리다, 모든게 메세지로 날라온다

GetMesseage : 메세지큐에서 하나씩 꺼내온다 -> 메세지가 없으면 반환을 안함, 그래서 쓰레기
PeekMessage : 메세지큐에 메세지가 업서도 반환됨. 게임에서는 무조건 이걸 쓴다, 앞으로는 이걸 쓸 것임

TranslateMessage : 메세지를 번역한다
DisPatchMessage : 메세지 프로시져에 전달한다

운영체제가 메세지큐에 넣지않고 메세지 프로시져에 다이렉트로 전달하는 경우도 있다, 그 외의 것들은 다 메세지 큐에 넣어줌

공통기능들을 헤더파일(T Std)에 때려박을 것...

매크로 난사 무엇;; WInMain이 GAME_START 하나로 합쳐져부렸어,,

스트링화..연산자..? 뭐에요 그게 ㅅㅂ 처음보는데 // 아무튼 # <- 이게스트링화 연산자다 (매크로에서..인듯?)

지금까지 한 내용은 TBase 1권의 2강 내용이었다. 챤챤.


메세지 프로시저는 무조건 전역함수를 기준으로 한다 (WndProc 얘기)
WndProc을 클래스 함수로 먹어버리셨는데.. 이부분은 좀 다시 봐야겠다 (3h 10m 근처)
_ASSERT를 사용하는 버릇을 들여야..

GetWindowRect :  타이틀 테두리 등등 포함한 전체 영역 반환
GetClientRect : 타이틀, 테두리, 이거저거 뺀 진짜 영역 반환
AdjustWindowRect : 클라이언트 영역 크기를 설?정 하는듯? 아닌가? 아닐지도?

GetWindowLong : 해당하는 윈도우 핸들의 스타일을 확인할 수 있다, 그냥 참고 하라고 ㅋㅋ
윈도우 핸들의 스타일 뿐만 아니라 프로시저나 인스턴스 등 이거저거 조회할 수도 있다, 알고만 있어라

SetWindowLong도 존재한다, 중간에 스타일을 바꿔줄 수도 있다는 얘기


윈도우가 만들어진 다음에 그걸 바꿔치기가 가능하다, 
GetSystemMetrics(SM_뭐시기뭐시기) : 화면 전체의 해상도, 얘는 뭐 크게 안중요한것같고
MoveWindow : 누가봐도 뭐 윈도우 옮기는거죠? 
