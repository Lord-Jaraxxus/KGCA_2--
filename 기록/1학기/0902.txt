9/2 (금) - 게임 기능? 게임 코어? 같은걸? 만들거에요? + 인풋, 라이트(Write, Light 아님ㅎ)

오브젝트 관련 기능은 다 뺌? 윈도우만 남김 ㅇㅇ

앞으로의 샘플들은 티코어.. 맨티코어.. 
게임코어라는 클래스를 사용할 수 있게끔 할거시다

디바이스 이런걸 사용하지 말고 게임코어를 사용할ㄹ수있도록
클라이언트가 게임코어만 연결하면 모든 작업을 이용할?수?있게끔?

윈도우 기능에서 윈도우가 아닌 기능을 다 빼버릴것이다 (게임타임, 메세지리스트 뭐 이런거)
메세지 루프가 진짜 윈도우의 기능이다.. 분리를 하자? 분리주의?
윈도우 런에 있던것도 다 게임코어 런으로

게임코어의 인잇프레임렌더릴리즈(IFRR)는 버츄얼 빼고 샘플에서 건들지 못하게끔 막아놓는다 (프라이빗으로)
타이머 클래스 추가할꺼다 (이거저거 너무 지저분해서)

디바이스 기능들(1~5)을 디바이스 클래스의 인잇에 옮겨둔다
샘플 릴리즈에서 디바이스 릴리즈하던것들을 디바이스 클래스의 릴리즈함수에 다 빼놓는다
디바이스의 IFRR

타이머의 핵심기능 : 게임타이머, 일랩스타이머, fps(Frame Per Second)
게임타이머랑 일랩스타이머는 정말 많이 사용하기 때문에 스태틱으로 빼는거시 좋다.. 좋기는 한데?
선생님이 자주쓰는 방식은 g_로 해놓고 extern으로 빼버린다 (어디서든 접근 가능하게) 
// extern은 초기화하면 안된다(std에서), 대신 타이머 안에서 int g_뭐시기타이머; 해야함
일랩스타이머(경과시간) -> SecondPerFrame 으로 이름 변경

아무튼 코어(샘플이었던것)에서 윈도우, 디바이스, 타이머를 뜯어냈다
여기서 끝내긴 섭섭하니까 인풋 클래스를 하나 추가한다

시간은 보통 제일 먼저 처리가 된다 (시간처리 -> 입력처리)
나중에 IFRR를 컴퍼넌트로 묶어서 처리할꺼다, 그래서 이름을 똑같이 해놨다

인풋 클래스에는 일단 DWORD m_dwKeyState : 키 버튼 + 마우스 버튼 
Point ptPos : 마우스 위치
인잇에선 일단 제로메모리만 해놓고
프레임에선... 키 입력받는다? // SHORT(쇼트값을 리턴받는다) sKey = GetAsyncKeyState(iKey); : 비동기 키 상태
쇼트 최상위 비트가 1이면 눌러졌다는 뜼, 비트연산으로 검사


아니 ㅅㅂ 왜갑자기꺼지는데... 어디서부터날라간거야진짜
DXWrite부터 날라갔네... 하... 나중에 다시볼때 쓰던가 말던가 
이래서 아날로그가 좋아

*** D3D11CreateDevice의 4번째 인자인 Flag를 D3D11_CREATE_DEVICE_BGRA_SUPPORT 이걸로 바꿔야 D2D를 쓸 수 있다 ***

오 아무튼 경과시간이랑 fps 화면에 출력하게 만드심ㄷㄷ
글자체, 폰트크기등은 바꿀수 없는데 출력할 위치, 출력할 내용, 글자 색깔 등은 바꿀 수 있따
WriteFactory를 여러개 만들어놓고 원하는걸로 골라쓰면 글자체 폰트크기등도 어느정도 유동적으로 바꿀수있다

Draw라는 함수로 뺄꺼임, 매개변수는 영역, 내용, 색상 // 이런 함수를 헬퍼함수 라고 부르는?듯?

텍스트 레이아웃?? : 다양한 폰트를 실시간 바꿔주고 싶다고 할때 쓰면된다
얘를 쓰면 좀 많은 일을 할 수 있을것, 허나 단점이 있다 - 텍스트 내용을 바꿀수없음 ㅋㅋ
얘는 굳이 뭐 할필욘 없다.. 라고 하시니 메모는 귀찮으니 여기서 마무리

근데 게임에서는 저러케하면 연산량이 너무 많아서 보통 저렇게 안한다,
대신 스프라이트를 쓴다고합니다