9/6(화) - 오늘은 라이브러리만

Q : 그 싱글톤? 싱글톤에서 했던 뭐시기들 그거 그건데 아 템플릿
아무튼 그건 왜 cpp에 넣더라?

Q : 그 프로젝트 - 추가 종속성 언제했더라 놓쳤던 것 같은데

Q : 그래서 디파인 왜 제대로 안돌아감.. 선생님이 디파인 관련해서 하셨던 것들이랑 말들 다시 들어봐야할듯


라이브러리 작업 하면서 전에 했던것들 쭉 다시 볼 것

일단 오브젝트2D, NPC 2D, 유저 2D를 따로 클래스파일 만들어서 빼놓고
갸들 이름에 2D 안붙어있었던거 다 2D 붙여줌

 
동적 라이브러리 : 동적으로 넣었다가 뺐다가 할 수 있음
정적 라이브러리 : 실행 파일 크기에 아예 포함, 중간에 뺄 수 없다 (무조건 들어감)

라이브러리 만드는법 : 솔루션 우클릭 -> 추가 -> 새 프로젝트 -> 정적 라이브러리(일단)
그리고 출력 디렉토리, 중간 디렉토리 바꾸라

라이브러리를 빌드하게 되면 lib 파일이 생성된다 (실행 파일이 아니라)

스프라이트의 기능 하나하나씩을 라이브러리에 넣어줄 것

*라이브러리에 들어갈 거
1) 일단 윈도우 기능 (std도 같이, 윈도우 헤더랑 cpp 넣어놓고 dx관련은 다 뺄꺼임)


cpp가 다 lib파일에 들었다고 생각하면 된다
라이브러리랑 헤더만 넘겨주면 cpp 내용은 알수가업슴 

라이브러리 만들었으니 써먹어야지? 프로젝트 새로 하나 만들어서 
방금 만든 라이브러리만 가져와서 맨땅에서 사용해볼 것
이름이 샘플이 아니면 안된다 왜? 샘플 데모 하고 박아놨기때문; (저거 빼낼?수는 없나? 있을 것 같은데)

윈도우랑 게임코어가 엉겨있는게 짜증난다,
include랑 lib폴더를 새로 만듬, ?나 근데 저거 두개 있지않나
아무튼 include에 lib파일 만들때 사용한 헤더들을 넣어주고 (저거 따로 해야되는?거였나?)
보통은 pdb파일을 같이 넣는 경우가 많다 (프로그램 디버그 데이타베이스)
근데 귀찮으니까 lib파일만 lib폴더로 복사

../../include 이랑 ../../lib 해주기 매번 해주기 귀찮으니까 디폴트로 넣기 위해
각각 C/C++ -> 일반 -> 추가 포함 디렉터리에 ./../include 해주고
링커-> 일반-> 추가 라이브러리 디렉터리에 ../../lib 해줌 


자동적으로 갱신..시켜줘야 한다? 가능? 지금은 그런 작업이 없다 아 ㅋㅋ
그러므로 수동으로 갱신해야함
근데 저 윈도우쪽 더 건드릴 거 없는거 맞아? 애매하게 라이브러리로 놨다가 

예? 수업시간에 코딩하지 말라면서여;; 

아무튼 조건 컴파일을 걸어서 티코어가 있으면 엘스가 돌고, 없으면
속성 -> 전처리기에서 TCORE 넣어놓으면 #ifdef TCORE 걸어놓은게 돌아간다 싱기

자동화를 한다, 편하겠네! 자동... 

라이브러리 프로젝트 우클릭 속성 -> 출력 파일에 KymGameCore.lib 하면 현재 폴더에 라이브러리가 만들어진다
라이브러리 -> 속성 -> 빌드 이벤트 -> 빌드 후 이벤트 (컴파일이 정상적으로 되고 나면)  -> 명령줄 -> 편집 -> 
copy "*.h" "../../include" // 현재 폴더에 있는 모든 헤더파일을 상위 상위 인클루드 폴더에 복사할꺼다
copy "KymGameCore.lib" "../../lib" // 앞에걸 ("KymGameCore.lib" ) 뒤에경로로("../../lib") 복사할꺼다
근데 이렇게하면 안된다? 영문 한글을 따진다? 
그러니까 ../../ 대신 ..\\..\\로 바꿔라

라이브러리에 디파인 되어있으면 갖다쓰는것에서도 디파인이 되어있다
(라이브러리 속성에서 T코어 디파인 해놓으면 갖다쓴 libtest 프로젝트에서도 디파인이 되어있다)
그러니까 저거 좀 귀찮아질 거니까 당분간은 속성에서 디파인 할필요는 없다

라이브러리도 내 프로젝트의 cpp에 불과하다 라고 생각하면 된다
링크가 무엇이느느냐 : 외부 라이브러리랑 내 프로젝트랑 합쳐져서 병합이 되는거다, 그러니까 라이브러리던 내 소스에서던 어디에서든 디파인 해놨으면 디파인 된거다

엥 내 프로젝트에서 갖다쓴 라이브러리가 좀 바뀌어있다면 그 라이브러리부터 자동.. 으로 빌드하고 내 프로젝트를 빌드하게 할 수도 있다 
라이브러리 우클릭 -> 참조 -> 참조 추가 -> 원하는 프로젝트 클릭 // 근데나는왜안됨?? 아 위에 Debug 랑 x64로 해놔야한다

라이브러리 출력파일에다가 디버그버전라이브러리다 라는 뜼으로 _d를 붙일?것이다?
그리고 릴리즈에는 _r 붙여놓고 여기저기 다 세팅바꿔줌
릴리즈버전은 좀 최적화가 들어간다, 자비가 없다.

아 씨 놓쳤는데 어우 겨우 따라갔다


이제 하나하나씩 갖고와서 넣어줄 것이다.. 이제 따라서 안쳐도 되겠지? 아니었습ㄴ;디;;ㅏㅣㅣㅣ;;
아 나 게임코어까지 못따라가서 존나 지저분할건데;;

헤더랑 라이브러리 디바이스가 쓰는거는 std에 넣지 말고 디바이스에만 넣어서? 옮기시는듯?
외부 기호 오류 : 라이브러리나 cpp파일이 읎다 라는뜼
원래는 추가 종속성에다가 라이브러리들 넣어주는게 먼저다, 
근데 그렇게 넣으면 귀찮아죽으니까 코딩으로 하는게 훨씬 편리하다

라이브러리에 직접 넣지 마라? 검증이 끝난 후에 넣어라~
그러므로 라이브리 복사본을 만들어서 테스트용으로 쓸것이다!

코어 클래스를 넣을 것이다, 근데 난 코어 클래스가 없는데? 아직 거기까진 못따라가쓴ㄴ데;;
아무튼 코어 클래스의 코어인잇 코어프레임 코어뭐시기들은 숨겨놔야한다, 코어 밖에서 가지고놀지 못하게
샘플에서 런을 뺐다, 그러므로 게임코어의 런이 돌아가게 될것

샘플에서의 IFRR기능을 코어가 대체해야 할것, 샘플의 IFRR은 텅 빌 수 있도록 (나중에 작업할 수 있게)

2를 복사해서 3로..? 버전업데이트뭐그런건가? 머지? 무엇을 암시하는 것이지?
아 라이브러리를 복사하는 게 아니라 프로젝트를 새로 만들어서 샘플이랑 새로만든클래스랑 원래 라이브러리랑 해서 테스트하고
잘 돌아가는게 확인되면 그때 새로만든클래스를 라이브러리에 추가한다 이런 매커니즘이구나

디바이스는 제일 먼저 생성(인잇)되고 제일 마지막에 릴리즈되어야한다

인잇 클래스의 렌더에서 아웃풋디버그스트링으로 마우스 커서의 위치를 출력해본다 


복제하기 귀찮은 사람은 맨위에 프로젝트 - 템플릿 내보내기가 있는데
프로젝트 템플릿 선택하고 복제할 프로젝트를 선택한다음에 다음 누르고 템플릿 이름을 어? 안바꿔요?
아무튼 경로가 새로 생기는데 거기에 가보면 복제한 프로젝트.zip가 만들어져있따
추가 -> 새 프로젝트 -> 여기에 검색하면 복제한 프로젝트가 나옴 ㄷㄷ
근데 수작업이 덜 귀찮을 것 같은데; 아닌가? 않임말고

아무튼 킹늘은 갓기까지 하셧으면 좋겠는데
설마 쉐이더까장 나가시지느느는ㄴ는않으시겠지 
휴

보고 치더라도 직접 쳐야한다~ 말씀대로하고있습니다요