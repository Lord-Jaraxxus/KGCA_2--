10/28(금) - 아니 미친 어제꺼 어디갔어 분명히 저장도 해놨을텐데
	   아니 뭐 쿼드트리 구현은 다 했으니까 그렇다쳐도 아니 근데 진짜 어디갔는데

오늘은 3D 오브젝트

3D 오브젝트는 맥스, 마야, 이런 3D 모델링 툴로 제작해서 프로그래머한테 넘기면 -> 넘기면 뭐요? 우리가 갖다쓴다는건가 그냥 
3D오브젝트 파일들도 어떠한 형식(포맷)에 의해서 출력이 된다 (jpg png 이런것처럼?)
익스포터, 인포터.. 
그중 FBX가 가장 대중적, 모든 엔진에서 대표적으로 사용한다. 윈도우에 기본적으로 뷰어가 붙어있다

근데 일단 맥스 SDK를 써볼꺼임? 전-통적으로 대부분의 회사가 자기들만의 익스포터/인포터를 만들어서 썼다,
왜? 알려진 포맷을 써버리면 모든 유저, 모든 개발자가 파일을 읽어들이는 문제가 발생  

근데 이제는 쪼오끔 패러다임이 바뀌었다, 그렇게까지 자체 익스포터/인포터 만들어서 쓰는 회사가 많지가 않다? 자체 엔진(펄어비스-검은사막) 가진 놈들 정도?
나머지는 다 FBX를 쓴다

FBX -> 바로 읽는 게 아니라 컨버팅(변환?), 즉 엔진에 최적화를 해서 렌더링을 한다  

우리 입장에서 가장 편한 로딩 방법 -> 정점 버퍼, 인덱스 버퍼, 텍스처만 되어있으면 고거 갖고와서 쓰면댐
근데 그런 데이터는 거의 없다...

아무튼 선생님 코드에 저거는 옛날꺼니까 맥스 SDK를 이용해 자체 익스/인포터를 써서 어쩌구저쩌구
근데 실제 작업이 2달걸린다,, 이론은 1~2주면 끝나는데 구현할라믄 물리적인 시간이 필요, 코딩량이 어망머마하다 암튼 안하신다는소리겟지


애니메이션을 할 수가 있어야 게임을 만들 수가 잇겟죠

FBX SDK가 제공이 된다 -> FBX 포맷의 구조가 어떻게 생겼는지 알 필요가 없다, 함수 하나로 로딩을 다 해준다

두가지로 나눠진다, 정적인 오브젝트 & 동적인 오브젝트
일단 정적인 오브젝트부터 띄울 것

면마다 다른 텍스처를 쓰는 것 -> 서브 렌더링? 
서브 메테리얼이 있을 때, 없을 때, 다수의 오브젝트가 하나의 오브젝트를 이룰 때, 애니메이션이 있고 없고, 정점 컬러가 있고 없고 등등 경우의 수가 많다



빈 프로젝트-> fbx로더라는 이름의 프로젝트 만듦, 게임코어 상속, FbxLoader 클래스 만들구 std헤더 연결, 
fbx sdk도 폴더 옮겨놓고 fbxsdk 헤더도 연결, 라이브러리인 fbxsdk-md.lib 이것도 prgma comment 이걸로 연결
런타임 라이브러리를 사용할 라이브러리랑 맞춰줘야한다??  아몰랑 위에 저거 쓰면 런타임 라이브러리 안바꿔도된대

아무튼 FbxLoader 클래스에서 I F R R이랑 Load 함수 맹글어주고, 멤버변수들 일단 

FbxManager -> fmod의 시스템 같은 놈인가봄 
FbxImporter -> 머 읽어오는놈인갑지
FbxScene -> 아 못들엇서 뭐라구요?
FbxNode -> 아ㅓ.. 결과적으로 트리 구조로 되어있다 

이제 Init에서
m_FbxManager = FbxManager::Create(); // 스태틱으로 되어있다, 아무튼 매니저가 리턴된다
m_FbxImporter = FbxImporter::Create(매니저, ""); // 첫번째 매개변수에는 매니저를, 두번째에는 이름?같은건가? 암튼 유니코드가 아니라는것만 기억하면
m_FbxScene = FbxScene::Create(매니저, ""); // 위랑 비슷한듯

이제 이걸로 작업할껀데, Load함수에서

m_FbxImporter->Initialisze(filename); // filename은 유니코드가 아니다, C_STR로 바꾸셨음 나중에 대충 따라해
m_FbxImporter->Import(FbxScene); // 데이터는 씬에다가 저장해준다 그런ㄸ뜼, 씬에는 모든 파일 데이터가 메모리로 저장되어 있다?
m_pRootNode = m_FbxImporter->GetRootNode(); // 루트노드를 리턴? 해주는듯? 이제 요까징 했으면 트리 순회하면서 원하는 데이타만 뽑아오면된다?

void PreProcess(m_p루트노드) 함수를 하나 맹글어서.. 여기서 뭐할거임? 재귀호출?
FbxNode가 nullptr이라면 리턴, 아 대충 자식까지 내려가면서 재귀로 순회하는 그런느낌인가
아무튼 보시는대로 대충 자식 몇인지 구하고 자식만큼 재귀호출 ㅇㅇ
저렇게 돌다가 노드에 메쉬가 있다면 (GetMesh()가 true라면) 메쉬 데이타를 갖고오면? 된다	// Mesh란? 렌더 가능한 데이터
아무튼 버텍스버퍼, 텍스처 등등 우리가 원하는 데이타들은 다 메쉬안에 있다
싱글F? 아 씬 그래프 ㅋㅋ 트리 형식으로 렌더링하는거 (루트부터 쭉 돌면서 원큐에 이거저거 다ㅏ 렌더링하는느낌)
벡터로 메쉬리스트 만들고 거따가 위에서(PreProcess) 찾은 메쉬들 다 저장시키고

로드에서 오토로 메쉬리스트 돌면서 몬가를 찾아야 할 것이다, 근데 뭘 어떻게 찾음?
암튼 저 메쉬리스트를 해체분석해서 우리가 쓰는 오브젝트리스트로 바꿔서 만들어줘야할것

렌더에서 오브젝트 리스트 렌더도 해줌, 근데 이거 여기서 하는거 맞나? 나중에 밖으로 튀어나갈듯ㅋ
릴리즈에서는 오브젝트들 릴리즈하고 저기 뭐시기 Fbx 네개도 다 삭제(Destroy), 생성 역순으로



이새끼들은 보통 pnct 정점성분들을 별도로 다 출력한다
폴리곤이라는게 둘중에 하납니다, 3정점 or 4정점
맥스는 3정점, 마야는 4정점이 기본인데 Fbx는 둘다있나봐? 암튼 우리는 3정점을 쓰니까 3정점을 갖고와야댐

ParseMesh라고 함수 또 만들어서 여기 안에서 메쉬 분석 작업을 한다, 원하는 데이터를 저장도 해주고
이 메쉬가 갖고있는 폴리곤 카운터부터 가져온다 (메쉬->겟폴리곤카운터 하면 바로 나오네)
위에서 페이스숫자 인트로 만들어주고 
그리고 이 폴리곤 카운터만큼 for문 돌려서 
안에서 int 폴리사이즈 = 메쉬->겟폴리곤사이즈
그.. 페이스카운터가 왜 폴리사이즈 - 2인지?  3정점 4정점 그건가? 아니 이해를 못하겠네

아무튼 정점 리스트는 FbxVector* pVertexPositions = 메쉬->겟컨트롤포인츠
제어점..?? 위치값을 갖고 있는 시작주소다 일단 그렇게만
어.. 위치만 3로 받아도 4로 리턴한다?? 뭐 그렇게 중요한건 아닌것같고

코너값..? 코너인덱스 3개를 저장해놓는다; 저게 머지 
저따가 메쉬->겟폴리곤버텍스(폴리, 0 -> iFace+2 -> iFace+1) 해서 갖고온다 //  인덱스를 바꿔야하는것만 좀 알고있으면 된다,, ?
인덱스를 왜 바꿨느느냐 -> 맥스 좌표계는 앞이 Y, 위가 Z다 (우리가 평소 쓰던거랑 YZ가 바뀌었다) 
그래서 인덱스도 012가 아니라 021인거, yz값도 서로 바꿔줘야함

텍스처 좌표계도 다르다; DX : 00 10    FBX(맥스?) : 01 11      -> y값만 반전해주면 된다
			 01 11	 	   00 10


아무튼 요로케조로케해주면 위치 정점을 갖고올 수 있는듯
mData의 [0]이 x, [1]이 y, [2]가 z 
근데 위에서 말했듯이 yz 바꿔조야댐

컬러도 저장된 데이타가 있는데 일단 무시하고 흰색멕이고,
근데 텍스처 좌표는 무시를 몬한다.. 여기서부터는 만만치가 않다?
맥스의 구조, FBX의 구조를 알아야 UV값을 갖고올 수 있따;

뭐부터알아야하느느냐,레이어개념부터가야하는데, 어.........
일단 FbxLayerElementUV로 벡터를 만들어서? 거기 에다가? 
레이어카운터를 갖고오고,, 그만큼 for문돌리면서,, 겟레이어로 레이어를 갖고와서,, 그 레이어의 UV값이 널이 아니면 저장을해놓는다,,
버텍스컬러UV가 있니? 하면서 그것도 가져올 수 있는데,, 음,, 
뎃 
일단 다 빼고 0번 레이어만 뽑아오도록 일단 바꿔놈, 헷갈릴까봐인감

아무튼 UV를 DX식으로 바까야하는데, 귀찮으니까 함수하나(ReadTextureCoord) 만들어서 거기서 처리할꺼


졸려죽것네.. 근데 우리 인덱스버퍼인가 그거 처리 안해주지 않았음?
어.. 그거 만들어줄 필요는 없는데 null로 놓을 필요는 있네.. 음... 아니면 바로 DrawIndex대신 Draw돌리던가.. 
아무튼 마지막에 졸려죽을것같아서 몬가몬가좀더 추가로 있긴했는ㄴ데 뭐 어차피 나중에 자세히 다시 하시겠지
