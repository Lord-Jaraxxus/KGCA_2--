10/31(월) - 하 ㅅㅂ 왜 알람이 꺼져있냐.. 어째 뭔 해프닝이 없는나링없어


오늘한거(로추정되는것)
1. 텍스처 로딩
2. 텍스처 UV좌표 // 여까징이 못들은거 ㅠ
3. 정점 컬러
4. 서브 메테리얼

텍스처 좌표랑.. 뭐더라 아무튼 텍스처를 갖고와서 붙였다 (나 오기전까지 하신거신듯)

파일단위로 로더가 하나씩 생기도록 하셨는디,, 그런식으로 바위랑 박스랑 나오게 함 해보고
아무튼 나오긴 하는데 겹칭께 하나를 옆으로 밀어버리고.. 잘 나오네

매니저랑 임포터를 멤버로 둘 이유는 없다, 한 번만 생기면 된다 (여기서도 FBX매니저 클래스 만드실랑가)
씬은 로드할때마다 새로 만들어도 된다 -> 그래서 씬 만드는게 로드로 들어가삣네
어.. 여기선 일단 매니저가 아니라 임포터랑 멤버를 스태틱으로 바꿔버리셨다가 몬가몬가라서 다시보다보니까
매니저::크리에이트 -> 이놈이 사실 스태틱을 리턴함, 매니저는 사실 원래 스태틱이었음
아무튼 결론적으로 원점회귀 (여러개의 서로 다른 FBX파일을 읽어들이게끔만, 로더는 하나 읽을때마다 계속 새로 생김)


오브젝트가 하나가 아니라 두개인 fbx를 읽는건가? 아 아니구나 선생님 특제 fbx를 돌려보신건가
안보이게 박스 하나를 (텍스처도 안붙인거) 숨겨놓고 만들었다 -> 돌릴때 FUCK이 나야 정상이다 (UV가 없응꼐)
대충 처리하니까 보이긴 하는데 제대로 된 건 아니다, 행렬이 적용이 되어야..?  정점컬러도?

정점컬러부터 일단 작업을 하겟다, 정점 컬러는 어디서 어떻게 갖고오느느냐
갖고올때는 UV처럼 하면된다 (그걸못들었는데요!), 뭐 대충 위치는 알겠네 (레이어어쩌구 밑에)
컬러는 그대로 저장해도 된다, 뭐 바뀌는게 없다. 이름이 쪼금 거시기하긴 한데 뭐 아무튼 mRed 이런식으로 갖고오믄댄다

아잠깐딴생각하다가중요한거놓친것같은데 iBasePolyIndex -> 얘가뭐하는거지
폴리곤사이즈마다 베이스인덱스가 계속 누적이 된다? 아무튼 얘를 이용해서 정점컬러를? 넣는듯?
암튼 ReadColor 함수를 맹글어서? 거기서 뽑아내는듯? 
헉 UV뽑아낼때 썼던 함수..인데 뭐야저거 왤케왜ㅑㄹ캐야 

eByPolygonVertex일때? 아무튼 여기 근처에서 좀 몬가 다르다고 하셨는데 아니 앞에껄알아야 뭐가다른질알지 ㅠㅠ
텍스처에서는 다이렉트랑 인덱스다이렉트를 합침(안합쳤더니 텍스처가 막 비스듬하게 붙고 그랬디야), 
컬러는 다이렉트랑 인덱스다이렉트를 따로 해줬다 (정상적으로?)

오브젝트는 하난데 텍스처는 여러개, 이런걸 서브 메테리얼 이라고 한다
아니 근데 어디에 뭘 붙여야할지를 알아야?하지않음? 
각각의 페이스마다 사용하는 텍스처가 다르다 -> 그니까 제말이요.
같은 텍스처를 사용하는 페이스들끼리 묶어서 렌더링을 해야 한다 

GetmaterialCount -> 텍스처 갯수를 리턴해주는듯? 
아무튼 저 int submtrl(몇번째 텍스처인지 알려줄 역할) 요걸 알아내야 할것
메테리얼 셋 -> 어떤 폴리곤이 어떤 텍스처를 사용하고 있는지가 저장되어 있다
아무튼 메테리얼 셋을 뽑아내고, 새로 함수 하나 만들어서
거기에서 뽑아낸 메테리얼 셋에서 submtrl에 넣어줄 정보(인덱스..아마)를 뽑아낼것

서브 메테리얼이 반드시 있는 것은 아니다, 그래서 검사해서 서브메테리얼 없으면 텍스처?인덱스암튼 0으로 고정하고
저거 새로 만든 함수 내용은 그냥 긁어서 가져온다, 치기가 좀 그렇다 
아까랑 비슷,비슷하다...  여기는 되게 간단하다 (......)

아무튼 어느 부분에 넣어야 할지를 판별했따
오브젝트는 하난데 텍스처는 6개, 즉 따로따로 6번 뿌려야한다?
오브젝트 밑에 하위 오브젝트가 여러개 있어야?할 것? 
암튼 저 로더에 fbx오브젝트를 벡터로 맹글어서 그 아무튼 정보들을 나눠서 저장하고, 텍스처 이름도 따로 저장해준다


어우 ㅁ르겠다 뭐가 어떻게 돌아가는겨 ㅠ
개념 파악을 하고 최적화가 들어가야한다?
최적화까지 갈 것도 없고 중복처리라도..

언제나 그렇듯이 대충 큰 그림은 알것같은데 작업내용이대가리에안들어옴..
오늘은특히앞부분을놓쳐서그게더큰듯8ㅅ8

아무튼 행렬은 아직, 그 전처리만 하신? 듯?


Q : 아니 그래서 정점컬러는 뭐하는새끼임? 색깔은 어차피 다 텍스처가 들고있는거 아님?
A : 헐뭐임 버텍스컬러로 음영이 들어갔는데 -> 디자이너의 스킬 ㄷㄷ





안돼 오후수업..

서브 메테리얼은 굳이 오브젝트일 필요가 없다, 버텍스 버퍼를 더 만들면 되긴 하는데 일단 지금은 오브젝트로 몇개 만들었다

하나의 오브젝트(FBX)가 다수의 오브젝트(지오메트리?)를 갖고있을 수가 있다 (서브 메테리얼이랑은 다른 얘기)
다수의 오브젝트가 서로 다른 렌더 방식을 요구한다,
텍스처 맵이 어떤 성분을 갖고 있는지에 따라 렌더링이 달라져야 한다 (알파값을 써야하는놈, 안써도 되는놈, 등등..)

각각의 오브젝트가 행렬값이 다르다 -> 애니메이션이 된다
그 행렬의 사잇값을 찾아서 보간을 해야 한다
 

아무튼 위에건 나중에 할 거고, 지금 당장 시급한거 -> 정점 노말
정점성분에서 안 뺀게 있다, 정점 노말. 
노말이 왜 중요하냐 -> 조명

높이맵과 디퓨즈맵
높이맵 -> 지형의 y값을 따로 저장한거 
디퓨즈맵 -> 높이맵의 y값을 사용할 텍스처

정점 노말.. 의... 어우돌겠네
노말을 정상적으로 계산할라면 월드행렬의 역행렬의 전치행렬이 곱해져야 한다 -> 암기사항;
룩벡터랑 노말벡터랑 내적해서 0 이하인 놈들..? 아무튼 안보일 놈들을 찾을수도 있다?
모든 정점이 어떤 페이스랑 인접해있는지 다 저장해놓는다, 빨리빨리 찾아야하니까

조명 -> 지역 조명, 전역 조명 
빛이 직접적으로 온다-> 지역 조명
빛이 벽에 반사되어서 온다 등등 -> 전역 조명

정점 노말이 제대로 아뇌면 저런 연산을 아예 못한다, 아무튼 정점 노말이 중요하다는 얘긴듯


서브 메테리얼이랑
텍스처 맵이 어떤 성분을 갖고 있는지에 따라 렌더링이 달라져야 한다 (오브젝트에 붙는 텍스처의 종류)
요거 다시한번 강조..

애니메이션에서 보간이 필요하다 라는 얘기도

조명이 수학이 엄청 많다, 조명보다 어려운 3D수학은 없다.. ㅅㅂ;



아무튼 구조적인 이해가 정말 중요하다, 구현은 그냥 샘플거 갖다붙이면 될 것
