11/1(화) - 다행히 오늘은 별일없긴한데 오른손 엄지가 왤케왤케냐


오늘 한거
1. 서브메테리얼 커버를 버텍스버퍼 여러개로
2. 정점 노말 
3. 행렬 맛보기 
4. 조명 맛보기



하나의 노드가 하나의 메쉬 
인덱스버퍼는 나중에 최적화할때쓴다?


아무튼 지금 서브메테리얼을 오브젝트 여러개로 구현하는게 아니라 그냥 버텍스버퍼를 여러개 만들어서 뿌리도록 바꿀 것

FBX오브젝트가 베이스오브젝트가 아니라 3D오브젝트를 상속하도록 바꾸심
그리고 FO 안에 텍스처 벡터인 서브텍스처도 만들고
CreateVertexData랑 CreateVertexBuffer 얘들도 따로 빼서 여기서 몬가 작업을 할 것 

베이스오브젝트에 전역으로 뭔가 넣을것, 근데 전역으로 넣게 되면 네임스페이스가 필요해진다
어..? 베이스오브젝트도 네임스페이스 안에 넣어삐고, CreateVetexBuffer를 베이스오브젝트 위에도 하나 새로 만드심
보이드포인터는또뭐여;;; 암튼 매개변수로 (디바이스, 데이터주소, 버텍스갯수, 버텍스사이즈) 일케 받아옴
암튼 절케 전역으로 CreateVertexBuffer를 빼놨음, 얘를 쓸때는 앞에 :: 붙여주면 덜 헷갈릴 것

근데 버텍스 버퍼가 저 데이타리스트에 들어감? 맞지 서브버텍스버퍼에 들어가야지
어.. 렌더도 일단 분리해놓고 서브메테리얼 한개/여러개 따라서 렌더링한다 -> 가 아니었습니다~ 결국 프리/포스트렌더만 재즈엉이 하고 렌더는 아예 사라짐
나중에 프레임도 마찬가지일라나? 아니 근데 나중에 FBX하나에 오브젝트 여러개 되면 어떡함? 개복잡해지겠네
암튼 렌더안에서 for문돌면서 버텍스버퍼를 바꿔치면서 렌더링을 해준다 (IASetVertexBuffer로)
그리고 포스트렌더에서 Draw할때도 저 m_VertexList.size()를 바꿔줄 필요가 있다
그러니까 포스트렌더도 갖고와서 재정의해준다
어.. 릴리즈도 갖고온다. 하긴 지울 것들이 많아졌제

암튼 버텍스버퍼를 갈아끼워줄때 텍스처도 갈아끼워줘야하니까 
로드 텍스처도 갖고와서?? 저건 굳이같은데 아닌가~아닌가~  아닌가베~~~ (굳이는 무슨 ㅋㅋ)
암튼 서브텍스처 벡터에 푸쉬백으로 하면 인덱스가 꼬일 수 있다, 그니까 리사이즈 먼저 해주고 인덱스로 넣어준다

아무튼 잘 됐다 챤챤
FBX오브젝트가 덩치가 커졌다, 이제 밖으로 빼줄 필요가 있?다



이제 정점 노말을 가져올것
근데 지금 심플버텍스에 노말이 없음, 여따가 n도 추가를 해줘야함
pct 했던것처럼 VertexNormalSet 가져와가 밑에서 또 ReadNormal함수 맹글어서 받는다
일단 ReadColor복붙해서 대충 바까주고 

엥 심플버텍스에 추가하는게 아니라 PNCT_VERTEX 라고 새로 구조체를 만드시네
앞으로 심플버텍스는 UI같은 경우가 아니면 안쓸꺼임, 컨트롤 F로 심플버텍스를 싹다 PNCT로 바꿔삠
그리고 쉐이더도 바꿔준다, VS_IN이랑 VS_OUT 손봐주고 VS OUT 안에서 중계?만 해줌 
그리고 베이스오브젝트의 CreateVertexLayout에서 ied내용에 노말을 추가하고 시작주소도 바꿔줌
아따 여기저기서 걸리네, 박스에서 버텍스리스트 만들땐 전/후/상/하/좌/우 노말벡터 적용해서 넣어줘보고 



이제 행렬을 사용을 할겁니다
FbxMatrix가 있다, Fbx에서 사용하는 행렬이다
지오메트리 변환 행렬 -> 기하 행렬 : 초기 정점 위치를 변환할 때 사용한다 (로컬 행렬)
어.... 몬가몬가인데 대충 ParseMesh 맨윗쪽에 보고 따라쳐야할듯
그리고 중간에 버텍스정점에 넣어줄때 geom.MultT(v) 뭐 이런식으로 정점에 행렬을 곱해준다
로컬행렬은 회전은 없고 그냥 이동만 쫌 있었다, 아마 월드행렬에 있을것

어 그전에 정점 노말에 어제 말했듯이 그 뭐시기의 역행렬 곱하고 전치행렬 곱하고 해준다 

지금 뭐가 추가가 되야하냐면요 
fbx파일이 맥스에서 뽑은건지, 마야에서 뽑은건지, 좌표계를 알 길이 없다
그래서 기준을 하나 설정을 할 필요가 있다
기준 -> 1.단위 2.기저
단위는 일단 cm로 설정 
기저는 마야를 기준으로 설정할 것 (Init에서)
저 기준들? 기저? 아무튼 적어도 기저는 정점들에 적용되는 게 아니라 행렬에 적용된다


행렬은 나중에 다시 설명을 해줄 것이고 (목요일날 하실예정... 큰거 올려나보다 ㅠ_ )
정점이랑 곱할때는 A (Affine) 행렬을 쓴다, 행렬끼리 곱할때는 그냥 행렬을 쓰고 
어... MultT는 정점*행렬이 아니라 행렬*정점이다... 열 우선 방식을 사용한다?


누구 야비군 가서 진도 팍팍 나가기가 꺼려지시나 보네 ㅋㅋ 개꿀

간단한 내적만?해본다? 
쉐이더에서 직접 하겠다, 내적을 통해서 정점의 컬러를 대체해본다? 뎃
아.. 조명 순한맛인갑네.. vLight(0,0,1) -> 앞에서 빛을 비추겠다
input.n이랑 vLight랑 내적할 수가 있다, 근데 vLight에 -를 해서 (램버트 조명 공식?? 암튼 왠지는 잘 몰?루겠는데 아무튼 결과가 잘 나오네)
그 값을 정점 컬러로 넣어버린다 (검은색~흰색)
오; 바위가 앞은 밝은데 뒤가 검은색됐어 

음..어.. 옛날에 넣어뒀던 타이머로 장난질 시작하셨다
vLight를 타이머의 뭐시기로 할 수 있도록 -> 시간에 따라서 빛의 방향?이 바뀔듯?
오 ㅋㅋ 쩐다

정점 노말이랑 라이트벡터랑 버텍스 쉐이더에서 내적한거 -> 그라운드 쉐이딩? 

쉐이더 안에서 텍스처 좌표는 얼마든지 만들어서 전달할 수 있다, 16개까지 사용가능
방금은 버텍스 쉐이더에서 조명을 줬는데 이제 그걸 픽셀 쉐이더로 넘길거다?
픽셀 쉐이더에서 저작업 하면 픽셀당 조명 들어가는거다 ㄷㄷ -> 퐁 쉐이딩?


어머저게뭐람;  ClearD3D11DeviceContext 이게뭐람
콘텍스트에 세팅된 모든것들을 풀어주는 함수 (파이프라인?)
어.. 아 이거 그거구나 그 렌더타겟 바꾸고나서 계속 우는거 해결할라고 
이걸 해보는 이유 -> 렌더타겟에 뭐가 설정이 됐는지 찾아봐라 



앞으로 해야할 거 -> FBX 매트릭스를 우리 매트릭스로 변환을 해서 가져와야한다