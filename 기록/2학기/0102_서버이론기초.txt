1/2(월) - 음~ 2학기 시작? // 휴~~~~~~~~

이번달은 서버만, 그다음엔 툴 

언리얼은 당분간 발표는 안할건데 어차피 포트폴리오에 올려야 하니까 알아서 만들어라..? 여유가 될려나



아무튼 서버 시작

서버의 프로그램적인 기술은 20년 전이나 지금이나 크게 달라진 게 ㅇ벗다
하드웨어만 성능이 좋아졌다, 그말인즉슨 좀 쉬울거란 뜼? 기대해봐도되는부분? 어림도없겠지

OSI 모델 : 물리적인 하드웨어로부터 소프트웨어까지 오기까지의 모든 과정 ,쪼끔 단축화된게 DOD모델
사실 DOD가 먼저 나왔는데 그걸 체계화시킨게 OSI 

L1장비 -> 컴퓨터랑 연결되는 모든거, 주로 랜카드
L2장비 -> 허브,라우터에서 랜카드로 가는거?

호스트 : 마지막에 단말 역할을 하는 뭐시기들 

네트워크랑 호스트... ABC클래스... 몬가 좀 이해가 잘 안되긴 하는데
일단 대부분 C클래스를 쓴다 

네트워크 인터페이스 카드(NIC)가 만들어질때마다 
유일한 번호(맥 어드레스)가 부여된다

IP주소 : 네트워크 주소랑 호스트 주소를 합친거, 어떤 컴퓨터인지 까지만 알려줌 그 이후에는 밑에놈이
포트 번호 : 통신을 받아갈 프로그램이 어떤놈인지를 알기위한 머시기

루프백 주소 : 소프트웨어 테스트를 위해서 사용됨, 내가 서버고 내가 클라이언트. 랜카드까지 갔다가 빠져나가지 않고 다시 돌아옴

서브넷 마스크 : 소프트웨어적으로 네트워크를 여러개로 쪼개는거, 회사에서 팀마다 쪼갠다거나 대충 그럴때 쓰는느낌인듯
슈퍼넷 : 위에꺼의 반대개념. 끝.


프로토콜 : 직역하자면 규칙. 두 컴퓨터 간에 어떻게 통신을 하는가에 대한 여러가지 규칙들을 모아놓은것

패킷 : 네트워크 전송의 데이터 단위 / 보내는 놈 받는 놈 주소가 같이 날라간다, 그것도 포함해서 다 묶인것이 패킷

ACK : 애크라고 부름, 응답패킷. 나 받았다라는 느낌

게이트웨이 : 대충 라우터가 게이트웨이 역할을 한다 




우리는 TCP, UDP 둘 중 하나를 쓰게 될 것

TCP : 연결형 프로토콜, 대충 전화번호로 전화거는 느낌?
UDP : 비 연결형 프로토콜, 대충 무전기 같은채널에 다 들리는 느낌 

신뢰성이라는 말을 담보로 한?다

TCP는 핸드쉐이킹(악수)가 되어야 메세지가 날라간다


도메인 : IP주소에 이름을 붙인거같은느낌


데이터가 쪼개져서 오는데 순서가 중요함
순서가 보장된 상태에서 연속적으로 온다 -> TCP, 스트림 기반?
요건 우리가 프로그램적으로 해줘야 한다

반면에 UDP는 한번에 받는다, 한번에 받던 못받던
아무튼 스트림 기반이 아니다, 서순이 보장이 안된다
대신 빠르다
그래서 일반적으로 신뢰성이 별로 필요없는데에서 쓴다 (ex-채팅)?