1/12(목) - 음~ 일찍자도 뭔가 별로 차이가 없는것같긴한데아몰ㄹ아


오늘은 저번에 하다 만 서버 셀렉트 마저 완성하고? +a를 하시것지? 

그전에 문서부터ㅎ 쓰레드 했었던거 다시 짚고넘어가고
TLS? 동기화? 음~

유저모드 -> 운영체제 관리하X  
커널모드 -> 운영체제 관리하

먼가 너무 슉슉넘어가는디,, 

멀티 쓰레드의 문제?
- 점유
- 공유 자원의 문제(ex-전역변수?) - (레이스 컨디션)
- 교착 상태 (데드락)


동기화? 시작하는? 듯?
크리티컬 섹션 -> 동기화 객체의 유저 모드 (유저 모드인 동기화 객체?)
뮤텍스 -> 동기화 객체의 커널 모드 (커널 모드인 동기화 객체?) 

임계 구역..? -> 처리하는 동안 다른 쓰레드로 넘어가지 않는 그런 구역ㅇ인듯
엔터 크리티컬 섹션이랑 리브 크리티컬 섹션 사이의 구역 -> 여기도 임계 구역 ㅇㅇ 
근데 이것도 잘못쓰면 교착 상태가 되어버린다

index++ 이런 단순한 한 문장도 어셈블리어로 보면 3~4줄일 수 있음, 그 도중에 스위칭이 되면 어떤 야랄이 날지 모른다
인터락 : 멀티 스레드에서 안전하게 변수값을 조작하는 함수 (=아토믹)

뮤텍스랑 크리티컬 섹션이랑은 동급임, 통신에서도 많이 사용을 하지만 

뮤텍스에 이름을 부여할 수가 있다? 
동시에 같은 이름의 뮤텍스가 생성될 수가 없다
그래서 같은 실행파일 두개 이상을 실행하지 못하도록 막을수도 잇다
운영체제에서 관리하기 때문에 가능한 일 (커널모드의 장점)


이벤트 
-> 쓰레드와 쓰레드 사이의 통신을 하기 위해 사용
    어떤 쓰레드에 명령을 내리거나 중계를 하고 싶을 때 사용하면 된다

CreateEvent(a,b,c,d) 일케 매개변수가 네개 있는데 중간에 b,c 두개가 중요하다
b는 수동 리셋 이벤트(TRUE) / 자동 리셋 이벤트(FALSE), c는 신호를 준 상태로 시작(T)/ 안 준 상태로 시작(F)

자동 리셋 이벤트 -> 대기상태가 종료되면 자동으로 비신호 상태가 된다 
수동 리셋 이벤트 -> 스레드가 비신호 상태로 만들 때까지 신호상태를 유지한다 


세마포어 
-> 뮤텍스와 유사한 동기화 객체, 얘는 카운팅을 할 수 있다
    대기는 대기인데, 카운팅만큼 대기할 수 있다 


핵심 : 대기함수라고 하는 것이 어떤 기능을 갖고 있는지 이해해야댐

용어?들을 좀 알아야함? (윈도우API랑 모던C++이랑 이름이 좀 다름)
레이스 컨디션 -> 공유 자원의 문제
데드락 -> 교착 상태
상호 배제 -> 임계 구역(크리티컬 섹션, 뮤텍스)
아토믹 -> 인터락 



이제 코?딩

ㄹㅇㅋㅋ 클라2 저거 뭐에다 쓸라고 만드셨던 거에요? 그때 자서 기억이안나요
셀렉트로 서버 만든건 뭐였던거죠? 
아 ㅋㅋ 복붙해놓고 이름이 이상하다~ 해갖고 유기했던거구나 ㄷㄷ 
내가 찾던건 SelectServer 이거였네 

암튼 위에꺼 복?붙해서 EventSelect로 이름을 바까줌
암튼 스탠다드 셀렉트 대신 이벤트 셀렉트 기능을 넣을것이다~
거까징해봐야 다른 작업을 할수가있다 (아마 비동기 뭐시기들?)

네트워크에서는(소켓에서는?) 수동 리셋 이벤트만 지원한다 -> WSACreateEvent

WSAEventSelect -> ,,,?? 몬가..... 몬가.. (소켓에다가 이벤트를 묶어주는 놈인가?)


// *소켓의 이벤트를 대기하는 대기함수!*
dwIndex = WSAWaitForMultipleEvents(a,b,c,d,e) -> 다수의 이벤트를 동시에 기다리는 함수? 
a는 이벤트 갯?수인듯?
b는 이벤트가 들어있는 배열같고
c는 WaitAll, 즉 모든 이벤트가 시그널 되어야만 반환? 암튼 우리는 False로쓸거임
d는 타임아웃 
e는뭐냐 일단 False

반환값이 WSA_WAIT_FAILED 이거면 오류가 있다는 뜻, 작업할 수가 없다
반환값이 WSA_WAIT_TIMEOUT -> 타임아웃 걸렸다는 뜻
반환값이 0이면 배열의 0번 이벤트가 발생했다?는 뜻? 인듯? 지금은 Accept, 즉 누가 접속했다

WSAEnumNetworkEvents -> 얜또뭔데 

ㅋㅋ 돌겠네 유저가 이벤트라는거임머임
같은 배열에 하나는 이벤트 하나는 소켓??

그니까 유저에 연결된 이벤트가 시그널이 오면 Accept Read Write Release 넷중하나가 왔다는뜻 대충그런건가?


// 이벤트 셀렉트에서는 요게 핵심 
그.. iEvent 써서 for문돌리는이유? (DWORD dwSignal = WSAWaitForMultipleEvents 파트)
WSAWaitForMultipleEvents가 동시에 여러개의 이벤트를 받아오면 (ex-5,7,8) 
5만 반환된다, 그래서 뒤엣놈들 이벤트 처리를 못해줌

근데그럼 5랑 10000이랑 같이오면 중간에 수천개 for문돌리는건같지않ㅇ?음?

지금 stl 리스트를 쓰고있는데, 좀 거시기하다 
그렇다고 지금당장 맵으로 바꾸기는 그렇고 그냥
소켓으로 TUser를 찾는 그런 무식한 함수를 만들?것

셀렉트나 이벤트 셀렉트나 거기서거기
이벤트 셀렉트는 윈도우가 없어도 됨 (그래봐야 배열을 벗어날 수 없다)


Q : 셀렉트랑 이벤트 셀렉트랑 그래서 뭔차인데
A : 나?의 생각으로는 셀렉트->일단 모든소켓 다검사, 이벤트셀렉트->이벤트 보낸 놈들 중 제일 앞부터 검사
이벤트 셀렉트가 좀더 낫긴 할텐데 그래도 원하는 놈만 쏙쏙 빼먹을수는 없다

그러므로 따라치기 귀찮아.. 안할래..  