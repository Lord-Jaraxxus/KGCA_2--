1/27(금) - 버스타고 와서 그런가 어제보단 살만하넹



dll..예?? UI툴 만들때 참고를 해라? ㅏㅇ니사빌 잠깐 한눈 판 사이에 개중요한게 지나갔는데
아니갑자기저게왜튀어나와영;;; 아몰랑 깃허브보면 뭔지대충보이겠지
암튼 UI에서 에디터박스 콤보박스 이게 제일 힘들다.. 해보면 안다라; -> 근데 그것도 여기 구현이 되어있따.. 보고 '참고' 하면 되겠네 ㅋㅋ
아무튼 dll로 되어있다,, 중요한 사료가 되겠어 



오늘은 플로이드 알고리즘, 그전에 잠깐 어제하던 에이스타 마저.. 안하시네?

암튼 플로이드 알고리즘 -> 모든 정점(노드)에서 모든 정점으로 가는 길을 미리 저장해 놓자
갑자기 벽이 생기거나 무너지거나 하는 동적인 상황에 대처가 쪼꼼 어렵다

방향성? A->B는 가능한데 B->A는 불가능한 경우도 있을 수 있음.. (뭐 절벽이라던가)
일단 양방향을 구현한 후에 막는 걸 구현하면 될 것?

플로이드는 메모리(저장소)를 쪼금 더 쓰면 A->B로 가는 모든 노드를 저장해 놓을 수도 있다 (최단거리뿐만 아니라)

플로이드의 핵심은 저 겹쳐있는 FOR문 셋이다, 
첫번째 포문은 거쳐가는 모든 노드
j에서 k까지 갈건데, 직접 가는것보다 i를 거쳐서 가는게 더 빠르냐?를 검사..
( Q : 하나만 거쳐가는걸로 검사해도 됨..? 아직 이해가 잘 안된다)

알고리즘은 저게 끝, 우리가 해야 할 일은 리스트를 만들어야 한다

아무튼튼껍질 다시 플로이드로 돌아와서, 코딩 시작 
어제 에이스타 만들때 썼던걸 그대로 카피해서 쓸거시다
에이스타 플로이드 공통으로 쓸 수 있는 부분을 헤더파일로 묶음 -> PathStd

벽에 비용을 줘야하는데, 거의 무한대급 값을 넣어줘?야

플로이드는 
1) 2차원 배열을 무조건 먼저 만들어야 함 -> Initialize 함수
2) 삼중 순회 -> 모든 노드 리스트 구축 -> AllPathGenenrator 함수

이니셜라이즈 먼저, 월드 사이즈의 x*y -> 모든 노드의 개수 (NumNodes, 줄여서 NN이라고 쓰겠음)
우리한테 필요한 이차원 배열은 [NN][NN] 크기일 것 (모든 노드에서 모든 노드로 가는 길이니까)
어.. 근데 이중배열이 아니라 리스트(벡터)의 리스트를 쓰는 느낌으로 가는디? 왜굳이? 복잡해서 헷갈리는디ㅠ 

AllNodeList도 만들어둘거다,, 엥 왜 int리스트임? 뭘 저장하는거지? 모지? 뭘 의미하는것이지? 
만들어서 뭔가를 넣을거야, 아 벽인지 아닌지 그건가? 흠으음흫므ㅡㅁ믐..
아무튼 벽이면 -1을 주고 아니면 1을 줌, 아니 근데 그럼 그냥 bool쓰는?게??? 뭔가더있겠찌?

지금은 노드의 8방에 있으면 비용 1, 없으면 못가! 상태임,,
다이렉트로 갈수 있다없다 를??? 어떻게.. 판별? 저장? 
옘병ㅋㅋ 뭔 리스트가 자꾸 생겨..... AllPathCostList..
다이렉트로 못 가는건 무한대를 넣을것


졸려디지는줄아랏내.. 사실 몬가 기분좋은 졸림이긴 했는데 아무튼 한템포 쉬었고 바람도 쐬었고 

아무튼 이웃노드 찾는건 에이스타에서 썼던거 가져올거임, ,,,,

슬슬 감이 안오는데 ㅋㅋ 어제처럼 완성된거 디버깅하면서 이론을 이해해야할것같다는예감이강하게들기시작했어



** Q : 아니 근데 그래서 경유점 하나 이상 거쳐야하는 길은 어떻게 찾아요????? **

이제 리스트 작업을 해야한다? 아무튼 이제 위의 질문에 대한 답변이 시작인건가?
대체 어떤 방식으로 얼기설기 짜맞출 것이지? 난 아직 감이 전혀 안오는데.. 아무튼 쉬는시ㅏ간..없어요? ㅇㅋ 잠깐셨따가 

연결리스트로 뭐시기하는 구조가 되면 된다?

연결리스트가 이 안에 들어있어야 합산을 하던 말던 한다,, 

인덱스마다 연결리스트를 하나씩 준다, 즉 모든 노드에 대한 연결리스트를 만들어서?

ㅋㅋ 몬가몬가 모몬가임~~
예? 3차원이요?? 리스트가? 아니 머 그래야 저 Q를 해결해줄 수 있나??


ㅋㅋㅋㅋㅋㅋ모르겠따~ 어느순간 내가 원하던 그거에 대한 답이 나온 것 같은데 
몰라 오늘도 디버깅 돌리면서 오 코런갑다 해야지 뭐~~~~ 

 
잘 모르겠고 졸리니까 쉬는시간좀주세요ㅠ
// 어째 느낌이 싸한게 12시전에 코드 다치실것같은데 아니죠?
->다행?히 플로이드로 12시는넘길듯
->응하루종일하고도2시까지안끝날듯~생각보다개빡신데이거

//////////////////////////////////////////////////////
자 자습시간... 여따 쓰면서 대충 정리해나가보자고

m_AllNodeList : 40개, 해당하는 번호의 노드가 벽인지 아닌지 저장 (벽이면 -1, 아니면 1)
m_AllPathCostList : 40 * 40개, 한 노드와 다른 노드 사이의 코스트들(40)을 저장 (40번 반복), 아직은 자기 주위 8방 놈들만 1로해줌
m_AllPathList : 40*40, 머지 얘는.. 일단  모든 노드한테(40) 모든 노드들의 인덱스를(40) 넣어줬는데

삼중포문 이게 젤 중요한 부부부분같긴한데, i가 경유점인듯?

음~ 대충 이해했어~
차례차례 한놈씩 길을 잇다 보면 연결이 된다 이거지..

아니 잠깐만 i, 그니까 경유지점이 고정된 상태에서 출발노드랑 목표노드만 바뀌는거잖아? 

맞네... 그런식으로 다 이어지는구먼


ㅋㅋ시발 하루 8시간중에 제대로 뭔가 한거 3시간은 되나 모르겠네..
아몰랑~~~~ 어떻게든되겠지~~