1/30(월) - 주말.. 나름 알찼..지?..


머지.. 이제 툴작업 시작인가??

아무튼 TBASIS 3D로 넘어감, 348페이지


-마우스 피킹
2D게임이랑 다르게 3D게임은 마우스 피킹이 좀 거시기해진다
2D좌표에서 출발해서 3D좌표로 변환해야 할 것 

좌표계의 원점은 무조건 0,0,0 
화면 좌표계의 원점 -> 화면 좌상단꼭짓점
카메라(뷰?) 좌표계의 원점 -> (월드 좌표계에서의) 카메라 위치(좌표) 

3D공간에서 화면을 클릭했다면, 
카메라가 있는 좌표에서 어디론가의 좌표로 향하는 레이(직선)으로 칠 수 있다 -> 방향(디렉션)

로컬->월드->뷰->투영->화면 // 이게 지금 좌표계 변환 상태
화면 좌표계인 클릭위치를 이제 역행렬 쥰내 곱해서 통일해서 쓰고있는 좌표계로(보통은 월드) 보내면 될 것 

교점 찾는거랑 오브젝트 선택하는거랑은 완전히 알고리즘이 달라진다,,

투영 좌표 -> 화면 좌표로 갈 때 뷰포트 행렬이 사용됨, 
투영 좌표는 -1 ~ 1인데 이걸 0에서 1로 바꾼 다음에 화면 x,y값이랑 곱해서(ex-800,600) 화면 좌표로 바꾼다

마우스 피킹은 최적화의 최적화가 되어야 한다, 마우스 찍는순간 버벅 하면 안대니까
그래서 굳이 투영행렬의 역행렬을 만들지 말고 변환수식(349p상단) 쓰는 게 더 빠르다

다른놈들도 마찬가지, 
투영 좌표 -> 뷰 좌표 (349p하단)
뷰 좌표 -> 월드 좌표 (350p)

음,,, 잘 이해 못하겠찌만 아무튼 저까장 하면 카메라 위치랑 클릭한 점(방향?)을 월드 좌표로 구할 수 있다
-> 즉, 월드 좌표에서 반직선(레이)을 가지고있다

아무튼 이제 삼각형과 레이의 교점으로 들어간다 (제일 어려운?거? ㄷ)
-> 평면과 반직선의 교점 계산 (351p)

점 포함 테스트,, 삼각형 안에 점이 있는가? // 교점 구하는거랑은 좀 다른데 암튼
방법이 두가지가 있는데 하나는 정점 노말 -> (우리한테는)쉬운데 최적화가 별로
하나는 UV이용 -> 어려운데 최적화가 조음

외..적? 외적내적 다까먹었는디,, 
음~~~~~모르겠어~~~~~~~~~ 대충듣지뭐~
아무튼 외적(+내적)을 통한 점 포함 테스트 (정점 노말 이용)

아무튼 점 포함 테스트를 하려면 점이 있어야 하잖아?
그러니까 이제 교점 구하는걸로 감,
음,, 잤어,,,  평면의 방정식? 노말..?

모르겠따,,, 아무튼 UV 매개변수를 사용하는 방법 (점 포함 테스트인가?) 
이야 ㅋㅋ 장난아니네 난 모를란다~~

수학적으로는 몰라도 되는데 공간적으로는 이해를 해야한다..
뭐가다른거임ㅋㅋ 슬프지만 둘 다 모를 것 같네요


몬가 몬가 존나 몬가인데
모르겠음ㅋㅋ 그냥 모르겠음ㅋㅋ 
수학적인 이해랑 공간적인 이해 둘다 실패했습니다

이해할려면 한달이 걸린다구요?
이해하고 싶지 않은데요..


ㅇㅋ ㅋㅋ 팀프를 위해서 일단 구현된거 갖다쓰고 남는시간에 공부를 하라 하셨다
남는시간이 있을지는 모르겠지만 아무튼 구현된거 갖다쓰는 정도는 얼마든지 할 수 있죠~